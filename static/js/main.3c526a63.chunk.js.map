{"version":3,"sources":["components/Details.js","components/Education.js","components/Work.js","App.js","index.js"],"names":["Details","updateDetails","e","obj","props","details","target","getAttribute","setDetails","value","address","mobileNumber","email","name","renderEditable","className","map","detail","htmlFor","toUpperCase","slice","type","id","onChange","uniqid","renderDisplay","renderDetails","editMode","this","React","Component","Education","addSection","event","preventDefault","educationObj","institueName","titleOfStudy","res","education","push","setEducation","removeSection","pop","updateSection","parentElement","sectionIndex","findIndex","newObj","splice","getSectionValue","section","find","data-key","renderEducation","onClick","Work","workObj","companyName","jobTitle","work","setWork","renderWork","App","setState","personalDetails","arr","submitForm","print","console","log","state","edit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c526a63.chunk.js","sourcesContent":["import React from 'react';\nimport uniqid from 'uniqid';\nimport '../styles/Details.css';\n\nclass Details extends React.Component {\n  updateDetails = (e) => {\n    const obj = this.props.details;\n    const type = e.target.getAttribute('id');\n\n    switch (type) {\n      case 'name':\n        this.props.setDetails(e.target.value, obj.address, obj.mobileNumber, obj.email);\n        break;\n      case 'address':\n        this.props.setDetails(obj.name, e.target.value, obj.mobileNumber, obj.email);\n        break;\n      case 'mobileNumber':\n        this.props.setDetails(obj.name, obj.address, e.target.value, obj.email);\n        break;\n      case 'email':\n        this.props.setDetails(obj.name, obj.address, obj.mobileNumber, e.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  renderEditable = () => {\n    const details = ['name', 'address', 'mobileNumber', 'email'];\n    return (\n      <div className=\"input-fields-details\">\n        {details.map((detail) => {\n          return (\n            <label htmlFor={detail} key={uniqid()}>\n              {detail[0].toUpperCase() + detail.slice(1) + ' :'}\n              <input\n                type=\"text\"\n                id={detail}\n                name={detail}\n                onChange={this.updateDetails}\n                value={this.props.details[detail]}\n              />\n            </label>\n          );\n        })}\n      </div>\n    );\n  };\n\n  renderDisplay = () => {\n    return (\n      <div className=\"display-fields-details\">\n        <label htmlFor=\"name\">Name: {this.props.details.name}</label>\n        <label htmlFor=\"address\">Address: {this.props.details.address}</label>\n        <label htmlFor=\"mobileNumber\">MobileNumber: {this.props.details.mobileNumber}</label>\n        <label htmlFor=\"email\">Email: {this.props.details.email}</label>\n      </div>\n    );\n  };\n\n  renderDetails = () => {\n    if (this.props.editMode) return this.renderEditable();\n    return this.renderDisplay();\n  };\n\n  render() {\n    return (\n      <div className=\"details\">\n        <h2 className=\"details-heading\"> Personal Details</h2>\n        {this.renderDetails()}\n      </div>\n    );\n  }\n}\n\nexport default Details;\n","import React from 'react';\nimport uniqid from 'uniqid';\nimport '../styles/Sections.css';\n\nclass Education extends React.Component {\n  addSection = (event) => {\n    event.preventDefault();\n    const educationObj = {\n      institueName: '',\n      titleOfStudy: '',\n      id: uniqid(),\n    };\n\n    const res = this.props.education.slice();\n    res.push(educationObj);\n    this.props.setEducation(res);\n  };\n\n  removeSection = (e) => {\n    e.preventDefault();\n    const res = this.props.education.slice();\n    res.pop();\n    this.props.setEducation(res);\n  };\n\n  updateSection = (e) => {\n    const id = e.target.parentElement.parentElement.getAttribute('data-key');\n    const sectionIndex = this.props.education.findIndex((e) => {\n      return e.id === id;\n    });\n\n    let newObj = {};\n    if (e.target.getAttribute('id') === 'instituteName') {\n      newObj = {\n        institueName: e.target.value,\n        titleOfStudy: this.props.education[sectionIndex].titleOfStudy,\n        id: this.props.education[sectionIndex].id,\n      };\n    } else {\n      newObj = {\n        institueName: this.props.education[sectionIndex].institueName,\n        titleOfStudy: e.target.value,\n        id: this.props.education[sectionIndex].id,\n      };\n    }\n\n    let res = this.props.education.slice();\n    res.splice(sectionIndex, 1, newObj);\n\n    this.props.setEducation(res);\n  };\n\n  getSectionValue = (id, type) => {\n    const section = this.props.education.find((e) => {\n      return e.id === id;\n    });\n\n    if (type === 'name') {\n      return section.institueName;\n    } else {\n      return section.titleOfStudy;\n    }\n  };\n\n  renderEditable = () => {\n    return this.props.education.map((section) => {\n      return (\n        <div key={section.id} data-key={section.id} className=\"input-fields-section\">\n          <label htmlFor=\"instituteName\">\n            Institute Name:{' '}\n            <input\n              type=\"text\"\n              id=\"instituteName\"\n              name=\"instituteName\"\n              onChange={this.updateSection}\n              value={this.getSectionValue(section.id, 'name')}\n            />\n          </label>\n          <label htmlFor=\"titleOfStudy\">\n            Title Of Study:{' '}\n            <input\n              type=\"text\"\n              id=\"titleOfStudy\"\n              name=\"titleOfStudy\"\n              onChange={this.updateSection}\n              value={this.getSectionValue(section.id, 'title')}\n            />\n          </label>\n        </div>\n      );\n    });\n  };\n\n  renderDisplay = () => {\n    return this.props.education.map((section) => {\n      return (\n        <div key={section.id} data-key={section.id} className=\"display-fields-section\">\n          <label htmlFor=\"instituteName\">Institute Name: {this.getSectionValue(section.id, 'name')}</label>\n          <label htmlFor=\"titleOfStudy\">Title Of Study: {this.getSectionValue(section.id, 'title')}</label>\n        </div>\n      );\n    });\n  };\n\n  renderEducation = () => {\n    if (this.props.editMode) {\n      return this.renderEditable();\n    } else {\n      return this.renderDisplay();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"section\">\n        <h3 className=\"section-heading\">Academic Details</h3>\n        {this.renderEducation()}\n\n        {this.props.editMode && (\n          <div className=\"buttons\">\n            <button className=\"add-section-button \" onClick={this.addSection}>\n              Add\n            </button>\n            <button className=\"remove-section-button \" onClick={this.removeSection}>\n              Remove\n            </button>\n          </div>\n        )}\n        \n      </div>\n    );\n  }\n}\n\nexport default Education;\n","import React from 'react';\nimport uniqid from 'uniqid';\n\nclass Work extends React.Component {\n  addSection = (event) => {\n    event.preventDefault();\n    const workObj = {\n      companyName: '',\n      jobTitle: '',\n      id: uniqid(),\n    };\n\n    const res = this.props.work.slice();\n    res.push(workObj);\n    this.props.setWork(res);\n  };\n\n  removeSection = (e) => {\n    e.preventDefault();\n    const res = this.props.work.slice();\n    res.pop();\n    this.props.setWork(res);\n  };\n\n  updateSection = (e) => {\n    const id = e.target.parentElement.parentElement.getAttribute('data-key');\n    const sectionIndex = this.props.work.findIndex((e) => {\n      return e.id === id;\n    });\n\n    let newObj = {};\n    if (e.target.getAttribute('id') === 'companyName') {\n      newObj = {\n        companyName: e.target.value,\n        jobTitle: this.props.work[sectionIndex].jobTitle,\n        id: this.props.work[sectionIndex].id,\n      };\n    } else {\n      newObj = {\n        companyName: this.props.work[sectionIndex].companyName,\n        jobTitle: e.target.value,\n        id: this.props.work[sectionIndex].id,\n      };\n    }\n\n    let res = this.props.work.slice();\n    res.splice(sectionIndex, 1, newObj);\n\n    this.props.setWork(res);\n  };\n\n  getSectionValue = (id, type) => {\n    const section = this.props.work.find((e) => {\n      return e.id === id;\n    });\n\n    if (type === 'name') {\n      return section.companyName;\n    } else {\n      return section.jobTitle;\n    }\n  };\n\n  renderEditable = () => {\n    return this.props.work.map((section) => {\n      return (\n        <div key={section.id} data-key={section.id} className=\"input-fields-section\">\n          <label htmlFor=\"companyName\">\n            Company Name:{' '}\n            <input\n              type=\"text\"\n              id=\"companyName\"\n              name=\"companyName\"\n              onChange={this.updateSection}\n              value={this.getSectionValue(section.id, 'name')}\n            />\n          </label>\n          <label htmlFor=\"jobTitle\">\n            Job Title:{' '}\n            <input\n              type=\"text\"\n              id=\"jobTitle\"\n              name=\"jobTitle\"\n              onChange={this.updateSection}\n              value={this.getSectionValue(section.id, 'title')}\n            />\n          </label>\n        </div>\n      );\n    });\n  };\n\n  renderDisplay = () => {\n    return this.props.work.map((section) => {\n      return (\n        <div key={section.id} data-key={section.id} className=\"display-fields-section\">\n          <label htmlFor=\"companyName\">Institute Name: {this.getSectionValue(section.id, 'name')}</label>\n          <label htmlFor=\"jobTitle\">Title Of Study: {this.getSectionValue(section.id, 'title')}</label>\n        </div>\n      );\n    });\n  };\n\n  renderWork = () => {\n    if (this.props.editMode) {\n      return this.renderEditable();\n    } else {\n      return this.renderDisplay();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"section\">\n        <h3 className=\"section-heading\">Work Experience Details</h3>\n        {this.renderWork()}\n\n        {this.props.editMode && (\n          <div className=\"buttons work-buttons\">\n            <button className=\"add-section-button\" onClick={this.addSection}>\n              Add\n            </button>\n            <button className=\"remove-section-button\" onClick={this.removeSection}>\n              Remove\n            </button>\n          </div>\n        )}\n\n      </div>\n    );\n  }\n}\n\nexport default Work;\n","import React from 'react';\nimport './styles/App.css';\nimport Details from './components/Details.js';\nimport Education from './components/Education.js';\nimport Work from './components/Work.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      personalDetails: { name: '', address: '', mobileNumber: '', email: '' },\n      education: [],\n      work: [],\n      editMode: true,\n    };\n  }\n\n  setDetails = (name, address, mobileNumber, email) => {\n    this.setState({\n      personalDetails: { name, address, mobileNumber, email },\n    });\n  };\n\n  setEducation = (arr) => {\n    this.setState({\n      education: arr,\n    });\n  };\n\n  setWork = (arr) => {\n    this.setState({\n      work: arr,\n    });\n  };\n\n  submitForm = (e) => {\n    e.preventDefault();\n    this.setState({\n      editMode: false,\n    });\n    this.print();\n  };\n\n  print = () => {\n    console.log(this.state);\n  };\n\n  edit = (e) => {\n    e.preventDefault();\n    this.setState({\n      editMode: true,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <form className=\"form\">\n          <h2 className=\"form-heading\">CV Application</h2>\n          <div className=\"form-main\">\n            <Details details={this.state.personalDetails} setDetails={this.setDetails} editMode={this.state.editMode} />\n            <Education\n              education={this.state.education}\n              setEducation={this.setEducation}\n              editMode={this.state.editMode}\n            />\n            <Work work={this.state.work} setWork={this.setWork} editMode={this.state.editMode} />\n\n            {!this.state.editMode && (\n              <button className=\"edit-button button\" onClick={this.edit}>\n                Edit\n              </button>\n            )}\n\n            <button type=\"submit\" onClick={this.submitForm} className=\"submit-button-form button\">\n              Submit\n            </button>\n          </div>\n        </form>\n        <footer className=\"footer\">CopyRight © PrinceThind</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./styles/index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}